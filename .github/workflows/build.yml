# SWAT+ CI for GH, O. David, 2024

name: CI SWAT+

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        # os: [windows-latest]
        toolchain:
          # - {compiler: gcc, version: 13}
          - {compiler: intel, version: '2024.1'}
          # - {compiler: intel-classic, version: '2024.1'}
          # - {compiler: nvidia-hpc, version: '23.11'}
        # include:
        #   - os: ubuntu-latest
        #     toolchain: {compiler: gcc, version: 12}
        # exclude:
        #   - os: macos-latest
        #     toolchain: {compiler: intel, version: '2023.2'}
        #   - os: macos-latest
        #     toolchain: {compiler: nvidia-hpc, version: '23.11'}
        #   - os: windows-latest
        #     toolchain: {compiler: nvidia-hpc, version: '23.11'}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0

      - name: Install Compiler
        uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: ${{ matrix.toolchain.compiler }}
          version: ${{ matrix.toolchain.version }}

      - name: Build
        run: |
          echo ${{ env.FC }}
          cmake --version
          if [ "$RUNNER_OS" == "Linux" ]; then
            cmake -B build -D CMAKE_Fortran_COMPILER=${{ env.FC }}
          elif [ "$RUNNER_OS" == "Windows" ]; then
            cmake -B build -G "MinGW Makefiles" -DCMAKE_Fortran_COMPILER="C:\Program Files (x86)\Intel\oneAPI\compiler\2024.1\bin\ifx.exe"
          else
            echo "$RUNNER_OS not supported"
            exit 1
          fi
        shell: bash

      # - name: Build Ubuntu
      #   if: "contains(${{ matrix.os }}, 'ubuntu')"
      #   run: |
      #     echo ${{ env.FC }}
      #     cmake --version
      #     cmake -B build -D CMAKE_Fortran_COMPILER=${{ env.FC }}

#   build:
#     name: Build
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         FC: ["ifort"]
#
#     steps:
#     - uses: actions/checkout@v4
#       with:
#         fetch-tags: true
#         fetch-depth: 0
#
#     - name: Install Intel Compiler
#       if: ${{ matrix.FC == 'ifort' }}
#       run: |
#         #wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
#         #sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
#         #rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
#         #sudo echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/#sources.list.d/oneAPI.list
#         #sudo apt-get update
#         #sudo apt-get install -y intel-oneapi-compiler-fortran
#         git --version
#         cmake -version
#
#     - name: Build SWAT+ with Intel
#       if: ${{ matrix.FC == 'ifort' }}
#       run: |
#         #source /opt/intel/oneapi/setvars.sh
#         #cmake -B build -D CMAKE_Fortran_COMPILER=ifx
#         git describe --tags > rel.txt
#         cat rel.txt
#         #cmake --build build
#
#     - name: upload
#       uses: actions/upload-artifact@v2
#       with:
#         name: sp
#         path: rel.txt
#
# # Deployment
#
#   deploy:
#     name: Release
#     runs-on: ubuntu-latest
#     needs:
#       - build
#
#     steps:
#     - name: download
#       uses: actions/download-artifact@v2
#       with:
#         name: sp
#
#     - name: Release
#       uses: softprops/action-gh-release@v2
#       #if: startsWith(github.ref, 'refs/tags/')
#       with:
#         token: ${{ github.token }}
#         tag_name: 70.2
#         prerelease: false
#         draft: false
#         name: "swattplus-?"
#         files: rel.*
#         generate_release_notes: true
#         body: |
#             <details>
#               <summary>Autogenerated Changelog</summary>
#             ... changelog ...
#             </details>


